<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.19.0@06b71be009a6bd6d81b9811855d6629b9fe90e1b">
  <file src="src/AbstractStaticResourceHandlerFactory.php">
    <MixedArrayOffset>
      <code>$cacheControlDirectives[$regex]</code>
    </MixedArrayOffset>
  </file>
  <file src="src/Event/ServerShutdownEvent.php">
    <PossiblyUnusedMethod>
      <code>getServer</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Event/ServerShutdownListener.php">
    <PossiblyUnusedParam>
      <code>$event</code>
    </PossiblyUnusedParam>
  </file>
  <file src="src/Event/WorkerErrorEvent.php">
    <PossiblyUnusedMethod>
      <code>getExitCode</code>
      <code>getSignal</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Exception/InvalidConfigException.php">
    <UnusedClass>
      <code>InvalidConfigException</code>
    </UnusedClass>
  </file>
  <file src="src/HttpServerFactory.php">
    <InvalidConstantAssignmentValue>
      <code>PROTOCOLS = [
        SWOOLE_SOCK_TCP,
        SWOOLE_SOCK_TCP6,
        SWOOLE_SOCK_UDP,
        SWOOLE_SOCK_UDP6,
        SWOOLE_UNIX_DGRAM,
        SWOOLE_UNIX_STREAM,
    ]</code>
    </InvalidConstantAssignmentValue>
  </file>
  <file src="src/Log/AccessLogDataMap.php">
    <InvalidOperand>
      <code>$begin</code>
      <code>$begin</code>
      <code>$begin</code>
    </InvalidOperand>
    <MixedOperand>
      <code>$firstLineSize</code>
      <code>$strlen($firstLine)</code>
    </MixedOperand>
    <PossiblyInvalidArgument>
      <code>$time</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidOperand>
      <code>$time</code>
      <code>$time</code>
    </PossiblyInvalidOperand>
    <PossiblyNullOperand>
      <code><![CDATA[$this->getRequestMessageSize(0)]]></code>
      <code><![CDATA[$this->getResponseMessageSize(0)]]></code>
    </PossiblyNullOperand>
    <PossiblyNullReference>
      <code>getHeaderSize</code>
    </PossiblyNullReference>
  </file>
  <file src="src/PidManager.php">
    <PossiblyUnusedReturnValue>
      <code>bool</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/StaticMappedResourceHandler.php">
    <MixedPropertyTypeCoercion>
      <code>$middleware</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/StaticResourceHandler.php">
    <MixedOperand>
      <code><![CDATA[$request->server['request_uri']]]></code>
    </MixedOperand>
    <MixedPropertyTypeCoercion>
      <code>$middleware</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/StaticResourceHandler/CacheControlMiddleware.php">
    <ArgumentTypeCoercion>
      <code>$regexp</code>
    </ArgumentTypeCoercion>
    <MixedPropertyTypeCoercion>
      <code>$cacheControlDirectives</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/StaticResourceHandler/ETagMiddleware.php">
    <ArgumentTypeCoercion>
      <code>$regexp</code>
    </ArgumentTypeCoercion>
    <MixedPropertyTypeCoercion>
      <code>$etagDirectives</code>
    </MixedPropertyTypeCoercion>
    <UnusedProperty>
      <code>$allowedETagValidationTypes</code>
    </UnusedProperty>
  </file>
  <file src="src/StaticResourceHandler/FileLocationRepository.php">
    <MixedArrayAssignment>
      <code><![CDATA[$this->mappedDocRoots[$prefix][]]]></code>
    </MixedArrayAssignment>
    <MixedOperand>
      <code>$directory</code>
    </MixedOperand>
  </file>
  <file src="src/StaticResourceHandler/GzipMiddleware.php">
    <MixedOperand>
      <code>$countBytes($line)</code>
    </MixedOperand>
    <UnusedFunctionCall>
      <code>stream_filter_append</code>
    </UnusedFunctionCall>
  </file>
  <file src="src/StaticResourceHandler/LastModifiedMiddleware.php">
    <ArgumentTypeCoercion>
      <code>$regexp</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/StaticResourceHandler/ValidateRegexTrait.php">
    <ArgumentTypeCoercion>
      <code>$regex</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/SwooleEmitter.php">
    <PossiblyNullReference>
      <code>asString</code>
    </PossiblyNullReference>
  </file>
  <file src="src/SwooleRequestHandlerRunner.php">
    <PossiblyUnusedReturnValue>
      <code>mixed</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/SwooleStream.php">
    <PossiblyNullOperand>
      <code>$size</code>
      <code>$size</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code>$size</code>
      <code><![CDATA[$this->index + $length >= $size
            ? $size
            : $this->index + $length]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUnusedReturnValue>
      <code>int</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Task/DeferredListenerDelegator.php">
    <UnusedParam>
      <code>$serviceName</code>
    </UnusedParam>
  </file>
  <file src="src/Task/Task.php">
    <PropertyTypeCoercion>
      <code>$payload</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/WhoopsPrettyPageHandlerDelegator.php">
    <PossiblyUnusedParam>
      <code>$container</code>
      <code>$serviceName</code>
    </PossiblyUnusedParam>
  </file>
  <file src="test/AttributeAssertionTrait.php">
    <PossiblyUnusedMethod>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code>$canonicalize</code>
      <code>$delta</code>
      <code>$ignoreCase</code>
      <code>$maxDepth</code>
    </PossiblyUnusedParam>
  </file>
  <file src="test/Command/StatusCommandTest.php">
    <InvalidArgument>
      <code>testExecuteIndicatesNoRunningServerWhenServerNotDetected</code>
      <code>testExecuteIndicatesRunningServerWhenServerDetected</code>
    </InvalidArgument>
    <InvalidReturnType>
      <code><![CDATA[iterable<array-key, list<list<int|null>>>]]></code>
    </InvalidReturnType>
  </file>
  <file src="test/Command/StopCommandTest.php">
    <InternalProperty>
      <code><![CDATA[$command->killProcess]]></code>
      <code><![CDATA[$command->killProcess]]></code>
      <code><![CDATA[$command->waitThreshold]]></code>
    </InternalProperty>
    <InvalidArgument>
      <code>testExecuteReturnsErrorIfUnableToStopServer</code>
      <code>testExecuteReturnsSuccessIfAbleToStopServer</code>
      <code>testExecuteReturnsSuccessWhenServerIsNotCurrentlyRunning</code>
    </InvalidArgument>
    <InvalidReturnType>
      <code><![CDATA[iterable<array-key, list<list<null|int>>>]]></code>
    </InvalidReturnType>
  </file>
  <file src="test/Command/TestAsset/HttpServer.php">
    <PossiblyUnusedMethod>
      <code>set</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/HotCodeReload/FileWatcher/InotifyFileWatcherTest.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->file]]></code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="test/HttpServerFactoryTest.php">
    <InvalidArgument>
      <code>testExceptionThrownForInvalidServerMode</code>
      <code>testExceptionThrownForInvalidSocketType</code>
    </InvalidArgument>
    <MixedReturnTypeCoercion>
      <code>$validTypes</code>
      <code><![CDATA[array<array-key, array{
     *     0: int,
     *     1: array<empty, empty>|array<string, non-empty-string>,
     * }>]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="test/Log/Psr3AccessLogDecoratorTest.php">
    <InvalidArgument>
      <code>testProxiesToPsr3Methods</code>
    </InvalidArgument>
  </file>
  <file src="test/Log/SwooleLoggerFactoryTest.php">
    <InvalidArgument>
      <code>testReturnsPsrLoggerWhenNoNamedLoggerIsFound</code>
      <code>testReturnsStdoutLoggerWhenOtherLoggersAreNotFound</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/GzipMiddlewareTest.php">
    <InvalidArgument>
      <code>testMiddlewareInjectsResponseContentCallbackWhenItDetectsAnAcceptEncodingItCanHandle</code>
      <code>testResponseContentCallbackEmitsExpectedHeadersAndCompressesContent</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/HeadMiddlewareTest.php">
    <InvalidArgument>
      <code>testMiddlewareDoesNothingIfRequestMethodIsNotHead</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/IntegrationMappedTest.php">
    <InvalidArgument>
      <code>testSendStaticResourceReturns405ResponseForUnsupportedMethodMatchingFile</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/IntegrationTest.php">
    <InvalidArgument>
      <code>testSendStaticResourceReturns405ResponseForUnsupportedMethodMatchingFile</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/MethodNotAllowedMiddlewareTest.php">
    <InvalidArgument>
      <code>testMiddlewareDoesNothingForAllowedMethods</code>
      <code>testMiddlewareReturns405ResponseWithAllowHeaderAndNoContentForDisallowedMethods</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticResourceHandler/OptionsMiddlewareTest.php">
    <InvalidArgument>
      <code>testMiddlewareDoesNothingForNonOptionsRequests</code>
    </InvalidArgument>
  </file>
  <file src="test/TestAsset/CallableObject.php">
    <LessSpecificReturnStatement>
      <code>$params</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<mixed>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="test/TestAsset/ClassWithCallbacks.php">
    <PossiblyUnusedMethod>
      <code>instanceCallback</code>
      <code>staticCallback</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code>$payload</code>
      <code>$payload</code>
    </PossiblyUnusedParam>
  </file>
</files>
